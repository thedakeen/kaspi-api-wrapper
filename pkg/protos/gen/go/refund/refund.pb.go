// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.26.1
// source: refund/refund.proto

package kaspiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QRRefundBehaviorOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrCodeScanEventPollingInterval int32 `protobuf:"varint,1,opt,name=qr_code_scan_event_polling_interval,json=qrCodeScanEventPollingInterval,proto3" json:"qr_code_scan_event_polling_interval,omitempty"`
	QrCodeScanWaitTimeout          int32 `protobuf:"varint,2,opt,name=qr_code_scan_wait_timeout,json=qrCodeScanWaitTimeout,proto3" json:"qr_code_scan_wait_timeout,omitempty"`
}

func (x *QRRefundBehaviorOptions) Reset() {
	*x = QRRefundBehaviorOptions{}
	mi := &file_refund_refund_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QRRefundBehaviorOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRRefundBehaviorOptions) ProtoMessage() {}

func (x *QRRefundBehaviorOptions) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRRefundBehaviorOptions.ProtoReflect.Descriptor instead.
func (*QRRefundBehaviorOptions) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{0}
}

func (x *QRRefundBehaviorOptions) GetQrCodeScanEventPollingInterval() int32 {
	if x != nil {
		return x.QrCodeScanEventPollingInterval
	}
	return 0
}

func (x *QRRefundBehaviorOptions) GetQrCodeScanWaitTimeout() int32 {
	if x != nil {
		return x.QrCodeScanWaitTimeout
	}
	return 0
}

type CreateRefundQRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceToken string `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	ExternalId  string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *CreateRefundQRRequest) Reset() {
	*x = CreateRefundQRRequest{}
	mi := &file_refund_refund_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRefundQRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRefundQRRequest) ProtoMessage() {}

func (x *CreateRefundQRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRefundQRRequest.ProtoReflect.Descriptor instead.
func (*CreateRefundQRRequest) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRefundQRRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *CreateRefundQRRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type CreateRefundQRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrToken                 string                   `protobuf:"bytes,1,opt,name=qr_token,json=qrToken,proto3" json:"qr_token,omitempty"`
	ExpireDate              *timestamppb.Timestamp   `protobuf:"bytes,2,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	QrReturnId              int64                    `protobuf:"varint,3,opt,name=qr_return_id,json=qrReturnId,proto3" json:"qr_return_id,omitempty"`
	QrRefundBehaviorOptions *QRRefundBehaviorOptions `protobuf:"bytes,4,opt,name=qr_refund_behavior_options,json=qrRefundBehaviorOptions,proto3" json:"qr_refund_behavior_options,omitempty"`
}

func (x *CreateRefundQRResponse) Reset() {
	*x = CreateRefundQRResponse{}
	mi := &file_refund_refund_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRefundQRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRefundQRResponse) ProtoMessage() {}

func (x *CreateRefundQRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRefundQRResponse.ProtoReflect.Descriptor instead.
func (*CreateRefundQRResponse) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRefundQRResponse) GetQrToken() string {
	if x != nil {
		return x.QrToken
	}
	return ""
}

func (x *CreateRefundQRResponse) GetExpireDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireDate
	}
	return nil
}

func (x *CreateRefundQRResponse) GetQrReturnId() int64 {
	if x != nil {
		return x.QrReturnId
	}
	return 0
}

func (x *CreateRefundQRResponse) GetQrRefundBehaviorOptions() *QRRefundBehaviorOptions {
	if x != nil {
		return x.QrRefundBehaviorOptions
	}
	return nil
}

type GetRefundStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrReturnId int64 `protobuf:"varint,1,opt,name=qr_return_id,json=qrReturnId,proto3" json:"qr_return_id,omitempty"`
}

func (x *GetRefundStatusRequest) Reset() {
	*x = GetRefundStatusRequest{}
	mi := &file_refund_refund_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRefundStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefundStatusRequest) ProtoMessage() {}

func (x *GetRefundStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefundStatusRequest.ProtoReflect.Descriptor instead.
func (*GetRefundStatusRequest) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{3}
}

func (x *GetRefundStatusRequest) GetQrReturnId() int64 {
	if x != nil {
		return x.QrReturnId
	}
	return 0
}

type GetRefundStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetRefundStatusResponse) Reset() {
	*x = GetRefundStatusResponse{}
	mi := &file_refund_refund_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRefundStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefundStatusResponse) ProtoMessage() {}

func (x *GetRefundStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefundStatusResponse.ProtoReflect.Descriptor instead.
func (*GetRefundStatusResponse) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{4}
}

func (x *GetRefundStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetCustomerOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceToken string `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	QrReturnId  int64  `protobuf:"varint,2,opt,name=qr_return_id,json=qrReturnId,proto3" json:"qr_return_id,omitempty"`
	MaxResult   int64  `protobuf:"varint,3,opt,name=max_result,json=maxResult,proto3" json:"max_result,omitempty"`
}

func (x *GetCustomerOperationsRequest) Reset() {
	*x = GetCustomerOperationsRequest{}
	mi := &file_refund_refund_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCustomerOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerOperationsRequest) ProtoMessage() {}

func (x *GetCustomerOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerOperationsRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerOperationsRequest) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{5}
}

func (x *GetCustomerOperationsRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *GetCustomerOperationsRequest) GetQrReturnId() int64 {
	if x != nil {
		return x.QrReturnId
	}
	return 0
}

func (x *GetCustomerOperationsRequest) GetMaxResult() int64 {
	if x != nil {
		return x.MaxResult
	}
	return 0
}

type CustomerOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrPaymentId     int64                  `protobuf:"varint,1,opt,name=qr_payment_id,json=qrPaymentId,proto3" json:"qr_payment_id,omitempty"`
	TransactionDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	Amount          float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CustomerOperation) Reset() {
	*x = CustomerOperation{}
	mi := &file_refund_refund_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomerOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerOperation) ProtoMessage() {}

func (x *CustomerOperation) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerOperation.ProtoReflect.Descriptor instead.
func (*CustomerOperation) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{6}
}

func (x *CustomerOperation) GetQrPaymentId() int64 {
	if x != nil {
		return x.QrPaymentId
	}
	return 0
}

func (x *CustomerOperation) GetTransactionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionDate
	}
	return nil
}

func (x *CustomerOperation) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetCustomerOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations []*CustomerOperation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *GetCustomerOperationsResponse) Reset() {
	*x = GetCustomerOperationsResponse{}
	mi := &file_refund_refund_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCustomerOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerOperationsResponse) ProtoMessage() {}

func (x *GetCustomerOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerOperationsResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerOperationsResponse) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{7}
}

func (x *GetCustomerOperationsResponse) GetOperations() []*CustomerOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type GetPaymentDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrPaymentId int64  `protobuf:"varint,1,opt,name=qr_payment_id,json=qrPaymentId,proto3" json:"qr_payment_id,omitempty"`
	DeviceToken string `protobuf:"bytes,2,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
}

func (x *GetPaymentDetailsRequest) Reset() {
	*x = GetPaymentDetailsRequest{}
	mi := &file_refund_refund_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentDetailsRequest) ProtoMessage() {}

func (x *GetPaymentDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentDetailsRequest) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{8}
}

func (x *GetPaymentDetailsRequest) GetQrPaymentId() int64 {
	if x != nil {
		return x.QrPaymentId
	}
	return 0
}

func (x *GetPaymentDetailsRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

type GetPaymentDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrPaymentId           int64                  `protobuf:"varint,1,opt,name=qr_payment_id,json=qrPaymentId,proto3" json:"qr_payment_id,omitempty"`
	TotalAmount           float64                `protobuf:"fixed64,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	AvailableReturnAmount float64                `protobuf:"fixed64,3,opt,name=available_return_amount,json=availableReturnAmount,proto3" json:"available_return_amount,omitempty"`
	TransactionDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
}

func (x *GetPaymentDetailsResponse) Reset() {
	*x = GetPaymentDetailsResponse{}
	mi := &file_refund_refund_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentDetailsResponse) ProtoMessage() {}

func (x *GetPaymentDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentDetailsResponse) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{9}
}

func (x *GetPaymentDetailsResponse) GetQrPaymentId() int64 {
	if x != nil {
		return x.QrPaymentId
	}
	return 0
}

func (x *GetPaymentDetailsResponse) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *GetPaymentDetailsResponse) GetAvailableReturnAmount() float64 {
	if x != nil {
		return x.AvailableReturnAmount
	}
	return 0
}

func (x *GetPaymentDetailsResponse) GetTransactionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionDate
	}
	return nil
}

type RefundPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceToken string  `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	QrPaymentId int64   `protobuf:"varint,2,opt,name=qr_payment_id,json=qrPaymentId,proto3" json:"qr_payment_id,omitempty"`
	QrReturnId  int64   `protobuf:"varint,3,opt,name=qr_return_id,json=qrReturnId,proto3" json:"qr_return_id,omitempty"`
	Amount      float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *RefundPaymentRequest) Reset() {
	*x = RefundPaymentRequest{}
	mi := &file_refund_refund_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundPaymentRequest) ProtoMessage() {}

func (x *RefundPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundPaymentRequest.ProtoReflect.Descriptor instead.
func (*RefundPaymentRequest) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{10}
}

func (x *RefundPaymentRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *RefundPaymentRequest) GetQrPaymentId() int64 {
	if x != nil {
		return x.QrPaymentId
	}
	return 0
}

func (x *RefundPaymentRequest) GetQrReturnId() int64 {
	if x != nil {
		return x.QrReturnId
	}
	return 0
}

func (x *RefundPaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type RefundPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnOperationId int64 `protobuf:"varint,1,opt,name=return_operation_id,json=returnOperationId,proto3" json:"return_operation_id,omitempty"`
}

func (x *RefundPaymentResponse) Reset() {
	*x = RefundPaymentResponse{}
	mi := &file_refund_refund_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundPaymentResponse) ProtoMessage() {}

func (x *RefundPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_refund_refund_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundPaymentResponse.ProtoReflect.Descriptor instead.
func (*RefundPaymentResponse) Descriptor() ([]byte, []int) {
	return file_refund_refund_proto_rawDescGZIP(), []int{11}
}

func (x *RefundPaymentResponse) GetReturnOperationId() int64 {
	if x != nil {
		return x.ReturnOperationId
	}
	return 0
}

var File_refund_refund_proto protoreflect.FileDescriptor

var file_refund_refund_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x17, 0x51, 0x52, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4b, 0x0a, 0x23, 0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1e, 0x71,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x38, 0x0a,
	0x19, 0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x77, 0x61,
	0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x57, 0x61, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x5b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x22, 0xf6, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x71, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x71, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x72, 0x5f, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x1a, 0x71, 0x72, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x52, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x17, 0x71, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x72, 0x5f, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x20, 0x0a, 0x0c, 0x71, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x71, 0x72, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x71, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x61, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x71, 0x72, 0x5f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x71, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xe1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x71, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x71, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x22, 0x0a, 0x0d, 0x71, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x71, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a,
	0x15, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xfe, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x52, 0x12, 0x23, 0x2e, 0x6b, 0x61, 0x73,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x52, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a,
	0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6b, 0x61, 0x73,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x26, 0x2e, 0x6b,
	0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x0d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22,
	0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x6b, 0x61, 0x73, 0x70, 0x69,
	0x2d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_refund_refund_proto_rawDescOnce sync.Once
	file_refund_refund_proto_rawDescData = file_refund_refund_proto_rawDesc
)

func file_refund_refund_proto_rawDescGZIP() []byte {
	file_refund_refund_proto_rawDescOnce.Do(func() {
		file_refund_refund_proto_rawDescData = protoimpl.X.CompressGZIP(file_refund_refund_proto_rawDescData)
	})
	return file_refund_refund_proto_rawDescData
}

var file_refund_refund_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_refund_refund_proto_goTypes = []any{
	(*QRRefundBehaviorOptions)(nil),       // 0: kaspi.api.v1.QRRefundBehaviorOptions
	(*CreateRefundQRRequest)(nil),         // 1: kaspi.api.v1.CreateRefundQRRequest
	(*CreateRefundQRResponse)(nil),        // 2: kaspi.api.v1.CreateRefundQRResponse
	(*GetRefundStatusRequest)(nil),        // 3: kaspi.api.v1.GetRefundStatusRequest
	(*GetRefundStatusResponse)(nil),       // 4: kaspi.api.v1.GetRefundStatusResponse
	(*GetCustomerOperationsRequest)(nil),  // 5: kaspi.api.v1.GetCustomerOperationsRequest
	(*CustomerOperation)(nil),             // 6: kaspi.api.v1.CustomerOperation
	(*GetCustomerOperationsResponse)(nil), // 7: kaspi.api.v1.GetCustomerOperationsResponse
	(*GetPaymentDetailsRequest)(nil),      // 8: kaspi.api.v1.GetPaymentDetailsRequest
	(*GetPaymentDetailsResponse)(nil),     // 9: kaspi.api.v1.GetPaymentDetailsResponse
	(*RefundPaymentRequest)(nil),          // 10: kaspi.api.v1.RefundPaymentRequest
	(*RefundPaymentResponse)(nil),         // 11: kaspi.api.v1.RefundPaymentResponse
	(*timestamppb.Timestamp)(nil),         // 12: google.protobuf.Timestamp
}
var file_refund_refund_proto_depIdxs = []int32{
	12, // 0: kaspi.api.v1.CreateRefundQRResponse.expire_date:type_name -> google.protobuf.Timestamp
	0,  // 1: kaspi.api.v1.CreateRefundQRResponse.qr_refund_behavior_options:type_name -> kaspi.api.v1.QRRefundBehaviorOptions
	12, // 2: kaspi.api.v1.CustomerOperation.transaction_date:type_name -> google.protobuf.Timestamp
	6,  // 3: kaspi.api.v1.GetCustomerOperationsResponse.operations:type_name -> kaspi.api.v1.CustomerOperation
	12, // 4: kaspi.api.v1.GetPaymentDetailsResponse.transaction_date:type_name -> google.protobuf.Timestamp
	1,  // 5: kaspi.api.v1.RefundService.CreateRefundQR:input_type -> kaspi.api.v1.CreateRefundQRRequest
	3,  // 6: kaspi.api.v1.RefundService.GetRefundStatus:input_type -> kaspi.api.v1.GetRefundStatusRequest
	5,  // 7: kaspi.api.v1.RefundService.GetCustomerOperations:input_type -> kaspi.api.v1.GetCustomerOperationsRequest
	8,  // 8: kaspi.api.v1.RefundService.GetPaymentDetails:input_type -> kaspi.api.v1.GetPaymentDetailsRequest
	10, // 9: kaspi.api.v1.RefundService.RefundPayment:input_type -> kaspi.api.v1.RefundPaymentRequest
	2,  // 10: kaspi.api.v1.RefundService.CreateRefundQR:output_type -> kaspi.api.v1.CreateRefundQRResponse
	4,  // 11: kaspi.api.v1.RefundService.GetRefundStatus:output_type -> kaspi.api.v1.GetRefundStatusResponse
	7,  // 12: kaspi.api.v1.RefundService.GetCustomerOperations:output_type -> kaspi.api.v1.GetCustomerOperationsResponse
	9,  // 13: kaspi.api.v1.RefundService.GetPaymentDetails:output_type -> kaspi.api.v1.GetPaymentDetailsResponse
	11, // 14: kaspi.api.v1.RefundService.RefundPayment:output_type -> kaspi.api.v1.RefundPaymentResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_refund_refund_proto_init() }
func file_refund_refund_proto_init() {
	if File_refund_refund_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_refund_refund_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_refund_refund_proto_goTypes,
		DependencyIndexes: file_refund_refund_proto_depIdxs,
		MessageInfos:      file_refund_refund_proto_msgTypes,
	}.Build()
	File_refund_refund_proto = out.File
	file_refund_refund_proto_rawDesc = nil
	file_refund_refund_proto_goTypes = nil
	file_refund_refund_proto_depIdxs = nil
}
