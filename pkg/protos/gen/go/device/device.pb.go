// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.26.1
// source: device/device.proto

package kaspiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTradePointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTradePointsRequest) Reset() {
	*x = GetTradePointsRequest{}
	mi := &file_device_device_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradePointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradePointsRequest) ProtoMessage() {}

func (x *GetTradePointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradePointsRequest.ProtoReflect.Descriptor instead.
func (*GetTradePointsRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{0}
}

type GetTradePointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tradepoints []*TradePoint `protobuf:"bytes,1,rep,name=tradepoints,proto3" json:"tradepoints,omitempty"`
}

func (x *GetTradePointsResponse) Reset() {
	*x = GetTradePointsResponse{}
	mi := &file_device_device_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradePointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradePointsResponse) ProtoMessage() {}

func (x *GetTradePointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradePointsResponse.ProtoReflect.Descriptor instead.
func (*GetTradePointsResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{1}
}

func (x *GetTradePointsResponse) GetTradepoints() []*TradePoint {
	if x != nil {
		return x.Tradepoints
	}
	return nil
}

type TradePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradepointId   int64  `protobuf:"varint,1,opt,name=tradepoint_id,json=tradepointId,proto3" json:"tradepoint_id,omitempty"`
	TradepointName string `protobuf:"bytes,2,opt,name=tradepoint_name,json=tradepointName,proto3" json:"tradepoint_name,omitempty"`
}

func (x *TradePoint) Reset() {
	*x = TradePoint{}
	mi := &file_device_device_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradePoint) ProtoMessage() {}

func (x *TradePoint) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradePoint.ProtoReflect.Descriptor instead.
func (*TradePoint) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{2}
}

func (x *TradePoint) GetTradepointId() int64 {
	if x != nil {
		return x.TradepointId
	}
	return 0
}

func (x *TradePoint) GetTradepointName() string {
	if x != nil {
		return x.TradepointName
	}
	return ""
}

type RegisterDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId     string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	TradepointId int64  `protobuf:"varint,2,opt,name=tradepoint_id,json=tradepointId,proto3" json:"tradepoint_id,omitempty"`
}

func (x *RegisterDeviceRequest) Reset() {
	*x = RegisterDeviceRequest{}
	mi := &file_device_device_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceRequest) ProtoMessage() {}

func (x *RegisterDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RegisterDeviceRequest) GetTradepointId() int64 {
	if x != nil {
		return x.TradepointId
	}
	return 0
}

type RegisterDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceToken string `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
}

func (x *RegisterDeviceResponse) Reset() {
	*x = RegisterDeviceResponse{}
	mi := &file_device_device_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceResponse) ProtoMessage() {}

func (x *RegisterDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterDeviceResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterDeviceResponse) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceToken string `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	mi := &file_device_device_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteDeviceRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

type DeleteDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDeviceResponse) Reset() {
	*x = DeleteDeviceResponse{}
	mi := &file_device_device_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceResponse) ProtoMessage() {}

func (x *DeleteDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceResponse.ProtoReflect.Descriptor instead.
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{6}
}

type GetTradePointsEnhancedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationBin string `protobuf:"bytes,1,opt,name=organization_bin,json=organizationBin,proto3" json:"organization_bin,omitempty"`
}

func (x *GetTradePointsEnhancedRequest) Reset() {
	*x = GetTradePointsEnhancedRequest{}
	mi := &file_device_device_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradePointsEnhancedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradePointsEnhancedRequest) ProtoMessage() {}

func (x *GetTradePointsEnhancedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradePointsEnhancedRequest.ProtoReflect.Descriptor instead.
func (*GetTradePointsEnhancedRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{7}
}

func (x *GetTradePointsEnhancedRequest) GetOrganizationBin() string {
	if x != nil {
		return x.OrganizationBin
	}
	return ""
}

type RegisterDeviceEnhancedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId        string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	TradepointId    int64  `protobuf:"varint,2,opt,name=tradepoint_id,json=tradepointId,proto3" json:"tradepoint_id,omitempty"`
	OrganizationBin string `protobuf:"bytes,3,opt,name=organization_bin,json=organizationBin,proto3" json:"organization_bin,omitempty"`
}

func (x *RegisterDeviceEnhancedRequest) Reset() {
	*x = RegisterDeviceEnhancedRequest{}
	mi := &file_device_device_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceEnhancedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceEnhancedRequest) ProtoMessage() {}

func (x *RegisterDeviceEnhancedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceEnhancedRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceEnhancedRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterDeviceEnhancedRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RegisterDeviceEnhancedRequest) GetTradepointId() int64 {
	if x != nil {
		return x.TradepointId
	}
	return 0
}

func (x *RegisterDeviceEnhancedRequest) GetOrganizationBin() string {
	if x != nil {
		return x.OrganizationBin
	}
	return ""
}

type DeleteDeviceEnhancedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceToken     string `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	OrganizationBin string `protobuf:"bytes,2,opt,name=organization_bin,json=organizationBin,proto3" json:"organization_bin,omitempty"`
}

func (x *DeleteDeviceEnhancedRequest) Reset() {
	*x = DeleteDeviceEnhancedRequest{}
	mi := &file_device_device_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceEnhancedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceEnhancedRequest) ProtoMessage() {}

func (x *DeleteDeviceEnhancedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceEnhancedRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceEnhancedRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDeviceEnhancedRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *DeleteDeviceEnhancedRequest) GetOrganizationBin() string {
	if x != nil {
		return x.OrganizationBin
	}
	return ""
}

var File_device_device_proto protoreflect.FileDescriptor

var file_device_device_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x61,
	0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0x5a, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x59,
	0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x16, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x38, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x69, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x69, 0x6e, 0x22, 0x6b, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e,
	0x32, 0xe1, 0x04, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x61, 0x73, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x23, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x6b,
	0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x12, 0x2b, 0x2e,
	0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x68, 0x61, 0x6e,
	0x63, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x61, 0x73,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6b, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x12, 0x2b, 0x2e, 0x6b, 0x61, 0x73,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x68,
	0x61, 0x6e, 0x63, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x2d, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x61,
	0x73, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x61, 0x73, 0x70, 0x69, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_device_device_proto_rawDescOnce sync.Once
	file_device_device_proto_rawDescData = file_device_device_proto_rawDesc
)

func file_device_device_proto_rawDescGZIP() []byte {
	file_device_device_proto_rawDescOnce.Do(func() {
		file_device_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_device_proto_rawDescData)
	})
	return file_device_device_proto_rawDescData
}

var file_device_device_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_device_device_proto_goTypes = []any{
	(*GetTradePointsRequest)(nil),         // 0: kaspi.api.v1.GetTradePointsRequest
	(*GetTradePointsResponse)(nil),        // 1: kaspi.api.v1.GetTradePointsResponse
	(*TradePoint)(nil),                    // 2: kaspi.api.v1.TradePoint
	(*RegisterDeviceRequest)(nil),         // 3: kaspi.api.v1.RegisterDeviceRequest
	(*RegisterDeviceResponse)(nil),        // 4: kaspi.api.v1.RegisterDeviceResponse
	(*DeleteDeviceRequest)(nil),           // 5: kaspi.api.v1.DeleteDeviceRequest
	(*DeleteDeviceResponse)(nil),          // 6: kaspi.api.v1.DeleteDeviceResponse
	(*GetTradePointsEnhancedRequest)(nil), // 7: kaspi.api.v1.GetTradePointsEnhancedRequest
	(*RegisterDeviceEnhancedRequest)(nil), // 8: kaspi.api.v1.RegisterDeviceEnhancedRequest
	(*DeleteDeviceEnhancedRequest)(nil),   // 9: kaspi.api.v1.DeleteDeviceEnhancedRequest
}
var file_device_device_proto_depIdxs = []int32{
	2, // 0: kaspi.api.v1.GetTradePointsResponse.tradepoints:type_name -> kaspi.api.v1.TradePoint
	0, // 1: kaspi.api.v1.DeviceService.GetTradePoints:input_type -> kaspi.api.v1.GetTradePointsRequest
	3, // 2: kaspi.api.v1.DeviceService.RegisterDevice:input_type -> kaspi.api.v1.RegisterDeviceRequest
	5, // 3: kaspi.api.v1.DeviceService.DeleteDevice:input_type -> kaspi.api.v1.DeleteDeviceRequest
	7, // 4: kaspi.api.v1.DeviceService.GetTradePointsEnhanced:input_type -> kaspi.api.v1.GetTradePointsEnhancedRequest
	8, // 5: kaspi.api.v1.DeviceService.RegisterDeviceEnhanced:input_type -> kaspi.api.v1.RegisterDeviceEnhancedRequest
	9, // 6: kaspi.api.v1.DeviceService.DeleteDeviceEnhanced:input_type -> kaspi.api.v1.DeleteDeviceEnhancedRequest
	1, // 7: kaspi.api.v1.DeviceService.GetTradePoints:output_type -> kaspi.api.v1.GetTradePointsResponse
	4, // 8: kaspi.api.v1.DeviceService.RegisterDevice:output_type -> kaspi.api.v1.RegisterDeviceResponse
	6, // 9: kaspi.api.v1.DeviceService.DeleteDevice:output_type -> kaspi.api.v1.DeleteDeviceResponse
	1, // 10: kaspi.api.v1.DeviceService.GetTradePointsEnhanced:output_type -> kaspi.api.v1.GetTradePointsResponse
	4, // 11: kaspi.api.v1.DeviceService.RegisterDeviceEnhanced:output_type -> kaspi.api.v1.RegisterDeviceResponse
	6, // 12: kaspi.api.v1.DeviceService.DeleteDeviceEnhanced:output_type -> kaspi.api.v1.DeleteDeviceResponse
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_device_device_proto_init() }
func file_device_device_proto_init() {
	if File_device_device_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_device_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_device_device_proto_goTypes,
		DependencyIndexes: file_device_device_proto_depIdxs,
		MessageInfos:      file_device_device_proto_msgTypes,
	}.Build()
	File_device_device_proto = out.File
	file_device_device_proto_rawDesc = nil
	file_device_device_proto_goTypes = nil
	file_device_device_proto_depIdxs = nil
}
